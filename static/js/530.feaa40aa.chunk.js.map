{"version":3,"file":"static/js/530.feaa40aa.chunk.js","mappings":"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","sources":["Api/Api.jsx","webpack://react-homework-template/./src/components/ListMovie/ListMovie.module.css?c0df","components/ListMovie/ListMovie.jsx","webpack://react-homework-template/./src/components/SearchQuery/SearchQuery.module.css?3c25","components/SearchQuery/SearchQuery.jsx","pages/Movies.jsx","webpack://react-homework-template/./src/pages/page.module.css?f580"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '1fe2d1e6f674f8fb835fda3144fa5e60';\n\nexport const fetchGetTraiding = async () => {\n        const response = await axios.get('trending/movie/day', {\n            params: {\n                api_key: API_KEY,\n            }\n        });\n    \n        return response.data.results;\n    };\n\nexport const fetchMovieDetail = async (movieId) => {\n    const response = await axios.get(`movie/${movieId}`, {\n        params: {\n            api_key: API_KEY,\n        }\n    });\n    return response.data;\n}\n\nexport const fetchMoviesSearchQuery = async (searchQuery) => {\n\tconst response = await axios.get('search/movie', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tquery: searchQuery,\n\t\t\tpage: 1,\n\t\t}\n\t});\n\n\treturn response.data.results;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n\tconst response = await axios.get(`movie/${movie_id}/credits`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t});\n\n\treturn response.data.cast;\n};\n\nexport const fetchMovieRewiews = async (movie_id) => {\n\tconst response = await axios.get(`movie/${movie_id}/reviews`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tpage: 1,\n\t\t}\n\t});\n\n\treturn response.data.results;\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ListMovie_list__OEqFj\",\"item\":\"ListMovie_item__n-OEN\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './ListMovie.module.css'\n\nconst ListMovie = ({movies}) => {\n    return (\n        <ul className={css.list}>\n            {movies.map((movie) => {\n            return (\n                <Link \n                key={movie.id} \n                to={`/movies/${movie.id}`}\n                >\n                <li key={movie.id} className={css.item}>\n                    {movie.name ? movie.name : movie.title}\n                </li>\n                </Link>\n            )\n        })}\n        </ul>\n    )\n}\nexport default ListMovie;\n\nListMovie.propTypes = {\n\tmovies: PropTypes.arrayOf(PropTypes.shape({\n\t\tid: PropTypes.number.isRequired,\n\t\tname: PropTypes.string,\n\t\ttitle: PropTypes.string,\n\t}))\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchQuery_form__JOvzf\",\"input\":\"SearchQuery_input__OSkqP\",\"button\":\"SearchQuery_button__bJ-R2\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport css from './SearchQuery.module.css'\n\n\nconst SearchQuery = ({onSubmit, searchQuery}) => {\n\tconst [query, setQuery] = useState('');\n\tconst [disabledBtn, setDisabledBtn] = useState(false);\n\n\tconst handleChange = (evt) => {\n\t\tsetQuery(evt.target.value);\n\t\tsetDisabledBtn(false);\n\t};\n\n\tconst handleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\n\t\tif (query.trim() === '') {\n\t\t\tNotiflix.Notify.warning('Search is a required field');\n\t\t\treturn;\n\t\t}\n\n\t\tonSubmit(query);\n\t\tsetDisabledBtn(true);\n\t}\n\n\treturn (\n\t\t<form \n\t\tonSubmit={handleSubmit}\n\t\tclassName={css.form}\n\t\t>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"query\"\n\t\t\t\tvalue={query}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tplaceholder=\"Enter the name of the movie\"\n\t\t\t\tclassName={css.input}\n\t\t\t/>\n\t\t\t<button \n\t\t\ttype=\"submit\" \n\t\t\tdisabled={disabledBtn}\n\t\t\tclassName={css.button}\n\t\t\t>Search</button>\n\t\t</form>\n\t)\n};\n\nexport default SearchQuery;\n\nSearchQuery.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n\tsearchQuery: PropTypes.string,\n}","import { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMoviesSearchQuery } from \"Api/Api\";\nimport SearchQuery from \"components/SearchQuery/SearchQuery\";\nimport ListMovie from \"components/ListMovie/ListMovie\";\nimport css from './page.module.css'\n\nconst Movies = () => {\n\nconst [searchParams, setSearchParams] = useSearchParams();\nconst query = searchParams.get('query');\n\nconst [movies, setMovies] = useState([]);\n\tconst [error, setError] = useState('');\n\n  useEffect(() => {\n    async function fetchMovies() {\n      const results = await fetchMoviesSearchQuery(query);\n      setMovies(results);\n    }\n    fetchMovies().catch((error) => {\n      setError('Sorry, something went wrong...');\n      console.error(error);\n    });\n\n  }, [query]);\n\n  const getSearchQuery = (searchQuery) => {\n    setSearchParams({query: searchQuery});\n  }\n\n  return (\n    <div className={css.container}>\n       <SearchQuery \n       onSubmit={getSearchQuery} \n       searchQuery={query}\n       />\n       {error ? (\n        <p>{error}</p>\n      ) : (\n        <ListMovie movies={movies} />\n      )}\n    </div>\n  )\n}\n\nexport default Movies;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"page_container__oNGKx\",\"title\":\"page_title__fhaD7\"};"],"names":["axios","API_KEY","fetchGetTraiding","params","api_key","response","data","results","fetchMovieDetail","movieId","fetchMoviesSearchQuery","searchQuery","query","page","fetchMovieCast","movie_id","cast","fetchMovieRewiews","movies","className","css","map","movie","to","id","name","title","onSubmit","useState","setQuery","disabledBtn","setDisabledBtn","evt","preventDefault","trim","Notiflix","type","value","onChange","target","placeholder","disabled","useSearchParams","searchParams","setSearchParams","get","setMovies","error","setError","useEffect","fetchMovies","catch","console","ListMovie"],"sourceRoot":""}